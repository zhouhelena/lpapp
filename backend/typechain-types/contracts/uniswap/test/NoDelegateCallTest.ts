/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "../../../common";

export interface NoDelegateCallTestInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "callsIntoNoDelegateCallFunction"
      | "canBeDelegateCalled"
      | "cannotBeDelegateCalled"
      | "getGasCostOfCanBeDelegateCalled"
      | "getGasCostOfCannotBeDelegateCalled"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "callsIntoNoDelegateCallFunction",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "canBeDelegateCalled",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "cannotBeDelegateCalled",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getGasCostOfCanBeDelegateCalled",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getGasCostOfCannotBeDelegateCalled",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "callsIntoNoDelegateCallFunction",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "canBeDelegateCalled",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cannotBeDelegateCalled",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGasCostOfCanBeDelegateCalled",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGasCostOfCannotBeDelegateCalled",
    data: BytesLike
  ): Result;
}

export interface NoDelegateCallTest extends BaseContract {
  connect(runner?: ContractRunner | null): NoDelegateCallTest;
  waitForDeployment(): Promise<this>;

  interface: NoDelegateCallTestInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  callsIntoNoDelegateCallFunction: TypedContractMethod<[], [void], "view">;

  canBeDelegateCalled: TypedContractMethod<[], [bigint], "view">;

  cannotBeDelegateCalled: TypedContractMethod<[], [bigint], "view">;

  getGasCostOfCanBeDelegateCalled: TypedContractMethod<[], [bigint], "view">;

  getGasCostOfCannotBeDelegateCalled: TypedContractMethod<[], [bigint], "view">;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "callsIntoNoDelegateCallFunction"
  ): TypedContractMethod<[], [void], "view">;
  getFunction(
    nameOrSignature: "canBeDelegateCalled"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "cannotBeDelegateCalled"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getGasCostOfCanBeDelegateCalled"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getGasCostOfCannotBeDelegateCalled"
  ): TypedContractMethod<[], [bigint], "view">;

  filters: {};
}
