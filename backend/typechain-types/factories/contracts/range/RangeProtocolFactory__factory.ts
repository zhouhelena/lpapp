/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  RangeProtocolFactory,
  RangeProtocolFactoryInterface,
} from "../../../contracts/range/RangeProtocolFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_uniswapV3Factory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "MismatchedVaultsAndImplsLength",
    type: "error",
  },
  {
    inputs: [],
    name: "NoVaultInitDataProvided",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "SameTokensAddresses",
    type: "error",
  },
  {
    inputs: [],
    name: "VaultUpgradeFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroPoolAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "uniPool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "VaultCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "uniPool",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "VaultImplUpgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "INIT_SELECTOR",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPGRADE_SELECTOR",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "fee",
        type: "uint24",
      },
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "createVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startIdx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endIdx",
        type: "uint256",
      },
    ],
    name: "getVaultAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "vaultList",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_impl",
        type: "address",
      },
    ],
    name: "upgradeVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_vaults",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_impls",
        type: "address[]",
      },
    ],
    name: "upgradeVaults",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200223238038062002232833981810160405281019062000037919062000228565b60008073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a491906200026b565b60405180910390fd5b620000be81620000fa60201b60201c565b508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505062000288565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001f082620001c3565b9050919050565b6200020281620001e3565b81146200020e57600080fd5b50565b6000815190506200022281620001f7565b92915050565b600060208284031215620002415762000240620001be565b5b6000620002518482850162000211565b91505092915050565b6200026581620001e3565b82525050565b60006020820190506200028260008301846200025a565b92915050565b608051611f80620002b260003960008181610251015281816106b20152610aff0152611f806000f3fe60806040523480156200001157600080fd5b5060043610620000b85760003560e01c8063715018a6116200007b578063715018a614620001755780638da5cb5b146200018157806397fb879714620001a3578063a7c6a10014620001c5578063c45a015514620001e7578063f2fde38b146200020957620000b8565b8063054bf17114620000bd5780632204d63e14620000dd5780632bcef00814620000fd5780634ae232ba146200011d5780636dbda2171462000153575b600080fd5b620000db6004803603810190620000d5919062000e4d565b62000229565b005b620000fb6004803603810190620000f5919062001036565b62000243565b005b6200011b600480360381019062000115919062001146565b620003d2565b005b6200013b60048036038101906200013591906200120f565b620004ac565b6040516200014a919062001324565b60405180910390f35b6200015d620005e2565b6040516200016c919062001385565b60405180910390f35b6200017f62000622565b005b6200018b6200063a565b6040516200019a9190620013b3565b60405180910390f35b620001ad62000663565b604051620001bc919062001385565b60405180910390f35b620001cf620006a3565b604051620001de9190620013e1565b60405180910390f35b620001f1620006b0565b604051620002009190620013b3565b60405180910390f35b620002276004803603810190620002219190620013fe565b620006d4565b005b6200023362000761565b6200023f8282620007f1565b5050565b6200024d62000761565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631698ee828787876040518463ffffffff1660e01b8152600401620002ae9392919062001441565b602060405180830381865afa158015620002cc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002f2919062001495565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200035b576040517f037064f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006200036d878787858888620009a5565b90508073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f5d9c31ffa0fecffd7cf379989a3c7af252f0335e0d2a1320b55245912c781f5360405160405180910390a350505050505050565b620003dc62000761565b8181905084849050146200041c576040517fb7c10ccc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b84849050811015620004a5576200048f858583818110620004455762000444620014c7565b5b90506020020160208101906200045c9190620013fe565b848484818110620004725762000471620014c7565b5b9050602002016020810190620004899190620013fe565b620007f1565b80806200049c9062001525565b9150506200041f565b5050505050565b606060018383620004be919062001572565b620004ca9190620015ad565b67ffffffffffffffff811115620004e657620004e562000eef565b5b604051908082528060200260200182016040528015620005155781602001602082028036833780820191505090505b50905060008390505b828111620005db57600181815481106200053d576200053c620014c7565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682858362000577919062001572565b815181106200058b576200058a620014c7565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508080620005d29062001525565b9150506200051e565b5092915050565b6040518060400160405280601281526020017f75706772616465546f28616464726573732900000000000000000000000000008152508051906020012081565b6200062c62000761565b62000638600062000cfa565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6040518060400160405280601f81526020017f696e697469616c697a6528616464726573732c696e7432342c627974657329008152508051906020012081565b6000600180549050905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b620006de62000761565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620007535760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200074a9190620013b3565b60405180910390fd5b6200075e8162000cfa565b50565b6200076b62000dbe565b73ffffffffffffffffffffffffffffffffffffffff166200078b6200063a565b73ffffffffffffffffffffffffffffffffffffffff1614620007ef57620007b162000dbe565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401620007e69190620013b3565b60405180910390fd5b565b60008273ffffffffffffffffffffffffffffffffffffffff166040518060400160405280601281526020017f75706772616465546f286164647265737329000000000000000000000000000081525080519060200120836040516024016200085a9190620013b3565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051620008c6919062001661565b6000604051808303816000865af19150503d806000811462000905576040519150601f19603f3d011682016040523d82523d6000602084013e6200090a565b606091505b505090508062000946576040517fe5ba34a300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167ff1bca332ecac5836810b4626fa419227255b5d1ec952fc6b7bba5916ecf6808060405160405180910390a3505050565b600080825103620009e2576040517f1438a13100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff160362000a48576040517fae402b8000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff161062000a85578662000a87565b875b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000afb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000af290620016db565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166322afcccb886040518263ffffffff1660e01b815260040162000b589190620016fd565b602060405180830381865afa15801562000b76573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b9c919062001758565b9050846040518060400160405280601f81526020017f696e697469616c697a6528616464726573732c696e7432342c627974657329008152508051906020012087838760405160240162000bf393929190620017ed565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405162000c5e9062000dc6565b62000c6b92919062001831565b604051809103906000f08015801562000c88573d6000803e3d6000fd5b5092506001839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050509695505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6106e5806200186683390190565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000e158262000de8565b9050919050565b62000e278162000e08565b811462000e3357600080fd5b50565b60008135905062000e478162000e1c565b92915050565b6000806040838503121562000e675762000e6662000dde565b5b600062000e778582860162000e36565b925050602062000e8a8582860162000e36565b9150509250929050565b600062ffffff82169050919050565b62000eae8162000e94565b811462000eba57600080fd5b50565b60008135905062000ece8162000ea3565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000f298262000ede565b810181811067ffffffffffffffff8211171562000f4b5762000f4a62000eef565b5b80604052505050565b600062000f6062000dd4565b905062000f6e828262000f1e565b919050565b600067ffffffffffffffff82111562000f915762000f9062000eef565b5b62000f9c8262000ede565b9050602081019050919050565b82818337600083830152505050565b600062000fcf62000fc98462000f73565b62000f54565b90508281526020810184848401111562000fee5762000fed62000ed9565b5b62000ffb84828562000fa9565b509392505050565b600082601f8301126200101b576200101a62000ed4565b5b81356200102d84826020860162000fb8565b91505092915050565b600080600080600060a0868803121562001055576200105462000dde565b5b6000620010658882890162000e36565b9550506020620010788882890162000e36565b94505060406200108b8882890162000ebd565b93505060606200109e8882890162000e36565b925050608086013567ffffffffffffffff811115620010c257620010c162000de3565b5b620010d08882890162001003565b9150509295509295909350565b600080fd5b600080fd5b60008083601f8401126200110057620010ff62000ed4565b5b8235905067ffffffffffffffff81111562001120576200111f620010dd565b5b6020830191508360208202830111156200113f576200113e620010e2565b5b9250929050565b6000806000806040858703121562001163576200116262000dde565b5b600085013567ffffffffffffffff81111562001184576200118362000de3565b5b6200119287828801620010e7565b9450945050602085013567ffffffffffffffff811115620011b857620011b762000de3565b5b620011c687828801620010e7565b925092505092959194509250565b6000819050919050565b620011e981620011d4565b8114620011f557600080fd5b50565b6000813590506200120981620011de565b92915050565b6000806040838503121562001229576200122862000dde565b5b60006200123985828601620011f8565b92505060206200124c85828601620011f8565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6200128d8162000e08565b82525050565b6000620012a1838362001282565b60208301905092915050565b6000602082019050919050565b6000620012c78262001256565b620012d3818562001261565b9350620012e08362001272565b8060005b8381101562001317578151620012fb888262001293565b97506200130883620012ad565b925050600181019050620012e4565b5085935050505092915050565b60006020820190508181036000830152620013408184620012ba565b905092915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6200137f8162001348565b82525050565b60006020820190506200139c600083018462001374565b92915050565b620013ad8162000e08565b82525050565b6000602082019050620013ca6000830184620013a2565b92915050565b620013db81620011d4565b82525050565b6000602082019050620013f86000830184620013d0565b92915050565b60006020828403121562001417576200141662000dde565b5b6000620014278482850162000e36565b91505092915050565b6200143b8162000e94565b82525050565b6000606082019050620014586000830186620013a2565b620014676020830185620013a2565b62001476604083018462001430565b949350505050565b6000815190506200148f8162000e1c565b92915050565b600060208284031215620014ae57620014ad62000dde565b5b6000620014be848285016200147e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200153282620011d4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620015675762001566620014f6565b5b600182019050919050565b60006200157f82620011d4565b91506200158c83620011d4565b9250828203905081811115620015a757620015a6620014f6565b5b92915050565b6000620015ba82620011d4565b9150620015c783620011d4565b9250828201905080821115620015e257620015e1620014f6565b5b92915050565b600081519050919050565b600081905092915050565b60005b838110156200161e57808201518184015260208101905062001601565b60008484015250505050565b60006200163782620015e8565b620016438185620015f3565b935062001655818560208601620015fe565b80840191505092915050565b60006200166f82846200162a565b915081905092915050565b600082825260208201905092915050565b7f746f6b656e2063616e6e6f742062652061207a65726f20616464726573730000600082015250565b6000620016c3601e836200167a565b9150620016d0826200168b565b602082019050919050565b60006020820190508181036000830152620016f681620016b4565b9050919050565b600060208201905062001714600083018462001430565b92915050565b60008160020b9050919050565b62001732816200171a565b81146200173e57600080fd5b50565b600081519050620017528162001727565b92915050565b60006020828403121562001771576200177062000dde565b5b6000620017818482850162001741565b91505092915050565b62001795816200171a565b82525050565b600082825260208201905092915050565b6000620017b982620015e8565b620017c581856200179b565b9350620017d7818560208601620015fe565b620017e28162000ede565b840191505092915050565b6000606082019050620018046000830186620013a2565b6200181360208301856200178a565b8181036040830152620018278184620017ac565b9050949350505050565b6000604082019050620018486000830185620013a2565b81810360208301526200185c8184620017ac565b9050939250505056fe60806040526040516106e53803806106e583398181016040528101906100259190610512565b610035828261003c60201b60201c565b50506105f6565b61004b826100c160201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a26000815111156100ae576100a8828261019460201b60201c565b506100bd565b6100bc61021e60201b60201c565b5b5050565b60008173ffffffffffffffffffffffffffffffffffffffff163b0361011d57806040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610114919061057d565b60405180910390fd5b806101507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61025b60201b60201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60606000808473ffffffffffffffffffffffffffffffffffffffff16846040516101be91906105df565b600060405180830381855af49150503d80600081146101f9576040519150601f19603f3d011682016040523d82523d6000602084013e6101fe565b606091505b509150915061021485838361026560201b60201c565b9250505092915050565b6000341115610259576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6000819050919050565b6060826102805761027b826102fa60201b60201c565b6102f2565b600082511480156102a8575060008473ffffffffffffffffffffffffffffffffffffffff163b145b156102ea57836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016102e1919061057d565b60405180910390fd5b8190506102f3565b5b9392505050565b60008151111561030d5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061037e82610353565b9050919050565b61038e81610373565b811461039957600080fd5b50565b6000815190506103ab81610385565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610404826103bb565b810181811067ffffffffffffffff82111715610423576104226103cc565b5b80604052505050565b600061043661033f565b905061044282826103fb565b919050565b600067ffffffffffffffff821115610462576104616103cc565b5b61046b826103bb565b9050602081019050919050565b60005b8381101561049657808201518184015260208101905061047b565b60008484015250505050565b60006104b56104b084610447565b61042c565b9050828152602081018484840111156104d1576104d06103b6565b5b6104dc848285610478565b509392505050565b600082601f8301126104f9576104f86103b1565b5b81516105098482602086016104a2565b91505092915050565b6000806040838503121561052957610528610349565b5b60006105378582860161039c565b925050602083015167ffffffffffffffff8111156105585761055761034e565b5b610564858286016104e4565b9150509250929050565b61057781610373565b82525050565b6000602082019050610592600083018461056e565b92915050565b600081519050919050565b600081905092915050565b60006105b982610598565b6105c381856105a3565b93506105d3818560208601610478565b80840191505092915050565b60006105eb82846105ae565b915081905092915050565b60e1806106046000396000f3fe6080604052600a600c565b005b60186014601a565b6027565b565b60006022604c565b905090565b3660008037600080366000845af43d6000803e80600081146047573d6000f35b3d6000fd5b600060787f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b60a1565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081905091905056fea264697066735822122067da619a0e2ed8891b265d46572c129780831fefc6c4308f0ac16133d3574b1c64736f6c63430008140033a26469706673582212207a201f6f35c1fef293bcb88089aaa64d5e53210d652756a9cda02a86313fd57364736f6c63430008140033";

type RangeProtocolFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RangeProtocolFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RangeProtocolFactory__factory extends ContractFactory {
  constructor(...args: RangeProtocolFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _uniswapV3Factory: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_uniswapV3Factory, overrides || {});
  }
  override deploy(
    _uniswapV3Factory: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_uniswapV3Factory, overrides || {}) as Promise<
      RangeProtocolFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): RangeProtocolFactory__factory {
    return super.connect(runner) as RangeProtocolFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RangeProtocolFactoryInterface {
    return new Interface(_abi) as RangeProtocolFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RangeProtocolFactory {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as RangeProtocolFactory;
  }
}
