/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  TickMathTest,
  TickMathTestInterface,
} from "../../../../contracts/uniswap/test/TickMathTest";

const _abi = [
  {
    inputs: [],
    name: "MAX_SQRT_RATIO",
    outputs: [
      {
        internalType: "uint160",
        name: "",
        type: "uint160",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_SQRT_RATIO",
    outputs: [
      {
        internalType: "uint160",
        name: "",
        type: "uint160",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getGasCostOfGetSqrtRatioAtTick",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "getGasCostOfGetTickAtSqrtRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "tick",
        type: "int24",
      },
    ],
    name: "getSqrtRatioAtTick",
    outputs: [
      {
        internalType: "uint160",
        name: "",
        type: "uint160",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceX96",
        type: "uint160",
      },
    ],
    name: "getTickAtSqrtRatio",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506108ae806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063a7398eb411610050578063a7398eb4146100f8578063b0622f671461012a578063ee8847ff1461015057610072565b80634f76c058146100775780636d2cc304146100b4578063986cfba3146100d8575b600080fd5b61009d6004803603602081101561008d57600080fd5b50356001600160a01b0316610158565b6040805160029290920b8252519081900360200190f35b6100bc610169565b604080516001600160a01b039092168252519081900360200190f35b6100bc600480360360208110156100ee57600080fd5b503560020b610181565b6101186004803603602081101561010e57600080fd5b503560020b61018c565b60408051918252519081900360200190f35b6101186004803603602081101561014057600080fd5b50356001600160a01b03166101a5565b6100bc6101b4565b6000610163826101bd565b92915050565b73fffd8963efd1fc6a506488495d951d5263988d2690565b60006101638261051d565b6000805a905061019b8361051d565b505a900392915050565b6000805a905061019b836101bd565b6401000276a390565b60006401000276a36001600160a01b038316108015906101f9575073fffd8963efd1fc6a506488495d951d5263988d266001600160a01b038316105b61024a576040805162461bcd60e51b815260206004820152600160248201527f5200000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b77ffffffffffffffffffffffffffffffffffffffff00000000602083901b166fffffffffffffffffffffffffffffffff811160071b81811c67ffffffffffffffff811160061b90811c63ffffffff811160051b90811c61ffff811160041b90811c60ff8111600390811b91821c600f811160021b90811c918211600190811b92831c979088119617909417909217179091171717608081106102f457607f810383901c91506102fe565b80607f0383901b91505b908002607f81811c60ff83811c9190911c800280831c81831c1c800280841c81841c1c800280851c81851c1c800280861c81861c1c800280871c81871c1c800280881c81881c1c800280891c81891c1c8002808a1c818a1c1c8002808b1c818b1c1c8002808c1c818c1c1c8002808d1c818d1c1c8002808e1c9c81901c9c909c1c80029c8d901c9e9d607f198f0160401b60c09190911c678000000000000000161760c19b909b1c674000000000000000169a909a1760c29990991c672000000000000000169890981760c39790971c671000000000000000169690961760c49590951c670800000000000000169490941760c59390931c670400000000000000169290921760c69190911c670200000000000000161760c79190911c670100000000000000161760c89190911c6680000000000000161760c99190911c6640000000000000161760ca9190911c6620000000000000161760cb9190911c6610000000000000161760cc9190911c6608000000000000161760cd9190911c66040000000000001617693627a301d71055774c8581027ffffffffffffffffffffffffffffffffffd709b7e5480fba5a50fed5e62ffc5568101608090811d906fdb2df09e81959a81455e260799a0632f8301901d600281810b9083900b1461050e57886001600160a01b03166104f28261051d565b6001600160a01b031611156105075781610509565b805b610510565b815b9998505050505050505050565b60008060008360020b12610534578260020b61053c565b8260020b6000035b9050620d89e8811115610596576040805162461bcd60e51b815260206004820152600160248201527f5400000000000000000000000000000000000000000000000000000000000000604482015290519081900360640190fd5b6000600182166105b7577001000000000000000000000000000000006105c9565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff16905060028216156105fd576ffff97272373d413259a46990580e213a0260801c5b600482161561061c576ffff2e50f5f656932ef12357cf3c7fdcc0260801c5b600882161561063b576fffe5caca7e10e4e61c3624eaa0941cd00260801c5b601082161561065a576fffcb9843d60f6159c9db58835c9266440260801c5b6020821615610679576fff973b41fa98c081472e6896dfb254c00260801c5b6040821615610698576fff2ea16466c96a3843ec78b326b528610260801c5b60808216156106b7576ffe5dee046a99a2a811c461f1969c30530260801c5b6101008216156106d7576ffcbe86c7900a88aedcffc83b479aa3a40260801c5b6102008216156106f7576ff987a7253ac413176f2b074cf7815e540260801c5b610400821615610717576ff3392b0822b70005940c7a398e4b70f30260801c5b610800821615610737576fe7159475a2c29b7443b29c7fa6e889d90260801c5b611000821615610757576fd097f3bdfd2022b8845ad8f792aa58250260801c5b612000821615610777576fa9f746462d870fdf8a65dc1f90e061e50260801c5b614000821615610797576f70d869a156d2a1b890bb3df62baf32f70260801c5b6180008216156107b7576f31be135f97d08fd981231505542fcfa60260801c5b620100008216156107d8576f09aa508b5b7a84e1c677de54f3e99bc90260801c5b620200008216156107f8576e5d6af8dedb81196699c329225ee6040260801c5b62040000821615610817576d2216e584f5fa1ea926041bedfe980260801c5b62080000821615610834576b048a170391f7dc42444e8fa20260801c5b60008460020b131561084f57806000198161084b57fe5b0490505b640100000000810615610863576001610866565b60005b60ff16602082901c019250505091905056fea26469706673582212200fa5be7efa5fa4371d4cd559e5c7e8c60263ad09cd88dcd1d4ee6d93f7637cd564736f6c63430007060033";

type TickMathTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TickMathTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TickMathTest__factory extends ContractFactory {
  constructor(...args: TickMathTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TickMathTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TickMathTest__factory {
    return super.connect(runner) as TickMathTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TickMathTestInterface {
    return new Interface(_abi) as TickMathTestInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TickMathTest {
    return new Contract(address, _abi, runner) as unknown as TickMathTest;
  }
}
