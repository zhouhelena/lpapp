/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  TestUniswapV3ReentrantCallee,
  TestUniswapV3ReentrantCalleeInterface,
} from "../../../../contracts/uniswap/test/TestUniswapV3ReentrantCallee";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "swapToReenter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f7a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063c22a2bfe1461003b578063fa461e3314610063575b600080fd5b6100616004803603602081101561005157600080fd5b50356001600160a01b03166100df565b005b6100616004803603606081101561007957600080fd5b8135916020810135918101906060810160408201356401000000008111156100a057600080fd5b8201836020820111156100b257600080fd5b803590602001918460018302840111640100000000831117156100d457600080fd5b5090925090506101f8565b6040805160008082526020820192839052630251596160e31b8352602482018181526044830182905260016064840181905273fffd8963efd1fc6a506488495d951d5263988d256084850181905260a060a48601908152855160c487018190526001600160a01b0389169763128acb0897879690939092909160e48501918083838b5b8381101561017a578181015183820152602001610162565b50505050905090810190601f1680156101a75780820380516001836020036101000a031916815260200191505b5096505050505050506040805180830381600087803b1580156101c957600080fd5b505af11580156101dd573d6000803e3d6000fd5b505050506040513d60408110156101f357600080fd5b505050565b6040805160008082526020820192839052630251596160e31b835260248201818152604483018290526001606484018190526084840183905260a060a48501908152845160c48601819052339663128acb0896869586949193909260e4850191808383895b8381101561027557818101518382015260200161025d565b50505050905090810190601f1680156102a25780820380516001836020036101000a031916815260200191505b5096505050505050506040805180830381600087803b1580156102c457600080fd5b505af19250505080156102f057506040513d60408110156102e457600080fd5b50805160209091015160015b610453576102fc610e9e565b806103075750610444565b604051806040016040528060038152602001624c4f4b60e81b8152506040516020018080602001828103825283818151815260200191508051906020019080838360005b8381101561036357818101518382015260200161034b565b50505050905090810190601f1680156103905780820380516001836020036101000a031916815260200191505b509250505060405160208183030381529060405280519060200120816040516020018080602001828103825283818151815260200191508051906020019080838360005b838110156103ec5781810151838201526020016103d4565b50505050905090810190601f1680156104195780820380516001836020036101000a031916815260200191505b5092505050604051602081830303815290604052805190602001201461043e57600080fd5b5061044e565b3d6000803e3d6000fd5b610456565b50505b6040805160008082526020820192839052633c8a7d8d60e01b83526024820181815260448301829052606483018290526084830182905260a060a48401908152835160c485018190523395633c8a7d8d9585948594859492939192909160e4850191808383895b838110156104d55781810151838201526020016104bd565b50505050905090810190601f1680156105025780820380516001836020036101000a031916815260200191505b5096505050505050506040805180830381600087803b15801561052457600080fd5b505af192505050801561055057506040513d604081101561054457600080fd5b50805160209091015160015b6106a45761055c610e9e565b806105675750610444565b604051806040016040528060038152602001624c4f4b60e81b8152506040516020018080602001828103825283818151815260200191508051906020019080838360005b838110156105c35781810151838201526020016105ab565b50505050905090810190601f1680156105f05780820380516001836020036101000a031916815260200191505b509250505060405160208183030381529060405280519060200120816040516020018080602001828103825283818151815260200191508051906020019080838360005b8381101561064c578181015183820152602001610634565b50505050905090810190601f1680156106795780820380516001836020036101000a031916815260200191505b5092505050604051602081830303815290604052805190602001201461069e57600080fd5b506106a7565b50505b604080516309e3d67b60e31b81526000600482018190526024820181905260448201819052606482018190526084820181905282513393634f1eb3d89360a480820194929392918390030190829087803b15801561070457600080fd5b505af192505050801561073057506040513d604081101561072457600080fd5b50805160209091015160015b6108845761073c610e9e565b806107475750610444565b604051806040016040528060038152602001624c4f4b60e81b8152506040516020018080602001828103825283818151815260200191508051906020019080838360005b838110156107a357818101518382015260200161078b565b50505050905090810190601f1680156107d05780820380516001836020036101000a031916815260200191505b509250505060405160208183030381529060405280519060200120816040516020018080602001828103825283818151815260200191508051906020019080838360005b8381101561082c578181015183820152602001610814565b50505050905090810190601f1680156108595780820380516001836020036101000a031916815260200191505b5092505050604051602081830303815290604052805190602001201461087e57600080fd5b50610887565b50505b336001600160a01b031663a34123a760008060006040518463ffffffff1660e01b81526004018084815260200183815260200182815260200193505050506040805180830381600087803b1580156108de57600080fd5b505af192505050801561090a57506040513d60408110156108fe57600080fd5b50805160209091015160015b610a5e57610916610e9e565b806109215750610444565b604051806040016040528060038152602001624c4f4b60e81b8152506040516020018080602001828103825283818151815260200191508051906020019080838360005b8381101561097d578181015183820152602001610965565b50505050905090810190601f1680156109aa5780820380516001836020036101000a031916815260200191505b509250505060405160208183030381529060405280519060200120816040516020018080602001828103825283818151815260200191508051906020019080838360005b83811015610a065781810151838201526020016109ee565b50505050905090810190601f168015610a335780820380516001836020036101000a031916815260200191505b50925050506040516020818303038152906040528051906020012014610a5857600080fd5b50610a61565b50505b60408051600080825260208201928390526312439b2f60e21b8352602482018181526044830182905260648301829052608060848401908152835160a48501819052339563490e6cbc95859485949193909260c4850191808383895b83811015610ad5578181015183820152602001610abd565b50505050905090810190601f168015610b025780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b158015610b2457600080fd5b505af1925050508015610b35575060015b610c8557610b41610e9e565b80610b4c5750610444565b604051806040016040528060038152602001624c4f4b60e81b8152506040516020018080602001828103825283818151815260200191508051906020019080838360005b83811015610ba8578181015183820152602001610b90565b50505050905090810190601f168015610bd55780820380516001836020036101000a031916815260200191505b509250505060405160208183030381529060405280519060200120816040516020018080602001828103825283818151815260200191508051906020019080838360005b83811015610c31578181015183820152602001610c19565b50505050905090810190601f168015610c5e5780820380516001836020036101000a031916815260200191505b50925050506040516020818303038152906040528051906020012014610c8357600080fd5b505b604080516385b6672960e01b81526000600482018190526024820181905260448201819052825133936385b6672993606480820194929392918390030190829087803b158015610cd457600080fd5b505af1925050508015610d0057506040513d6040811015610cf457600080fd5b50805160209091015160015b610e5457610d0c610e9e565b80610d175750610444565b604051806040016040528060038152602001624c4f4b60e81b8152506040516020018080602001828103825283818151815260200191508051906020019080838360005b83811015610d73578181015183820152602001610d5b565b50505050905090810190601f168015610da05780820380516001836020036101000a031916815260200191505b509250505060405160208183030381529060405280519060200120816040516020018080602001828103825283818151815260200191508051906020019080838360005b83811015610dfc578181015183820152602001610de4565b50505050905090810190601f168015610e295780820380516001836020036101000a031916815260200191505b50925050506040516020818303038152906040528051906020012014610e4e57600080fd5b50610e57565b50505b6040805162461bcd60e51b81526020600482015260116024820152702ab730b13632903a37903932b2b73a32b960791b604482015290519081900360640190fd5b60e01c90565b600060443d1015610eae57610f41565b600481823e6308c379a0610ec28251610e98565b14610ecc57610f41565b6040513d600319016004823e80513d67ffffffffffffffff8160248401118184111715610efc5750505050610f41565b82840192508251915080821115610f165750505050610f41565b503d83016020828401011115610f2e57505050610f41565b601f01601f191681016020016040529150505b9056fea26469706673582212208862c76b77ed26d72c1d8bd18edfc7847cef782e628b5d9ac87345d543788a3d64736f6c63430007060033";

type TestUniswapV3ReentrantCalleeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestUniswapV3ReentrantCalleeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestUniswapV3ReentrantCallee__factory extends ContractFactory {
  constructor(...args: TestUniswapV3ReentrantCalleeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestUniswapV3ReentrantCallee & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TestUniswapV3ReentrantCallee__factory {
    return super.connect(runner) as TestUniswapV3ReentrantCallee__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestUniswapV3ReentrantCalleeInterface {
    return new Interface(_abi) as TestUniswapV3ReentrantCalleeInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TestUniswapV3ReentrantCallee {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TestUniswapV3ReentrantCallee;
  }
}
