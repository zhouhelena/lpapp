/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  SwapMathEchidnaTest,
  SwapMathEchidnaTestInterface,
} from "../../../../contracts/uniswap/test/SwapMathEchidnaTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint160",
        name: "sqrtPriceRaw",
        type: "uint160",
      },
      {
        internalType: "uint160",
        name: "sqrtPriceTargetRaw",
        type: "uint160",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "int256",
        name: "amountRemaining",
        type: "int256",
      },
      {
        internalType: "uint24",
        name: "feePips",
        type: "uint24",
      },
    ],
    name: "checkComputeSwapStepInvariants",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610919806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063d7e3056f14610030575b600080fd5b610081600480360360a081101561004657600080fd5b5080356001600160a01b039081169160208101359091169060408101356001600160801b0316906060810135906080013562ffffff16610083565b005b6000856001600160a01b03161161009957600080fd5b6000846001600160a01b0316116100af57600080fd5b60008162ffffff16116100c157600080fd5b620f42408162ffffff16106100d557600080fd5b6000806000806100e88989898989610249565b935093509350935080600019038311156100fe57fe5b6000861215610119578560000382111561011457fe5b610125565b85818401111561012557fe5b876001600160a01b0316896001600160a01b0316141561017257821561014757fe5b811561014f57fe5b801561015757fe5b876001600160a01b0316846001600160a01b03161461017257fe5b876001600160a01b0316846001600160a01b0316146101b05760008612156101a5578560000382146101a057fe5b6101b0565b85818401146101b057fe5b886001600160a01b0316886001600160a01b03161161020657886001600160a01b0316846001600160a01b031611156101e557fe5b876001600160a01b0316846001600160a01b0316101561020157fe5b61023e565b886001600160a01b0316846001600160a01b0316101561022257fe5b876001600160a01b0316846001600160a01b0316111561023e57fe5b505050505050505050565b60008080806001600160a01b03808916908a1610158187128015906102ce5760006102828989620f42400362ffffff16620f424061043b565b90508261029b576102968c8c8c60016104eb565b6102a8565b6102a88b8d8c6001610566565b95508581106102b9578a96506102c8565b6102c58c8b8386610611565b96505b50610318565b816102e5576102e08b8b8b6000610566565b6102f2565b6102f28a8c8b60006104eb565b935083886000031061030657899550610318565b6103158b8a8a6000038561065d565b95505b6001600160a01b038a811690871614821561037b578080156103375750815b61034d57610348878d8c6001610566565b61034f565b855b955080801561035c575081155b6103725761036d878d8c60006104eb565b610374565b845b94506103c5565b8080156103855750815b61039b576103968c888c60016104eb565b61039d565b855b95508080156103aa575081155b6103c0576103bb8c888c6000610566565b6103c2565b845b94505b811580156103d557508860000385115b156103e1578860000394505b81801561040057508a6001600160a01b0316876001600160a01b031614155b1561040f57858903935061042c565b610429868962ffffff168a620f42400362ffffff166106a9565b93505b50505095509550955095915050565b6000808060001985870986860292508281109083900303905080610471576000841161046657600080fd5b5082900490506104e4565b80841161047d57600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b6000836001600160a01b0316856001600160a01b0316111561050b579293925b8161053857610533836001600160801b03168686036001600160a01b0316600160601b61043b565b61055b565b61055b836001600160801b03168686036001600160a01b0316600160601b6106a9565b90505b949350505050565b6000836001600160a01b0316856001600160a01b03161115610586579293925b600160601b600160e01b03606084901b166001600160a01b0386860381169087166105b057600080fd5b836105e057866001600160a01b03166105d38383896001600160a01b031661043b565b816105da57fe5b04610606565b6106066105f78383896001600160a01b03166106a9565b886001600160a01b03166106e3565b979650505050505050565b600080856001600160a01b03161161062857600080fd5b6000846001600160801b03161161063e57600080fd5b816106505761053385858560016106ee565b61055b85858560016107cf565b600080856001600160a01b03161161067457600080fd5b6000846001600160801b03161161068a57600080fd5b8161069c5761053385858560006107cf565b61055b85858560006106ee565b60006106b684848461043b565b9050600082806106c257fe5b84860911156104e45760001981106106d957600080fd5b6001019392505050565b808204910615150190565b600081156107615760006001600160a01b038411156107245761071f84600160601b876001600160801b031661043b565b61073c565b6001600160801b038516606085901b8161073a57fe5b045b90506107596107546001600160a01b038816836108b2565b6108c8565b91505061055e565b60006001600160a01b0384111561078f5761078a84600160601b876001600160801b03166106a9565b6107a6565b6107a6606085901b6001600160801b0387166106e3565b905080866001600160a01b0316116107bd57600080fd5b6001600160a01b03861603905061055e565b6000826107dd57508361055e565b600160601b600160e01b03606085901b16821561086b576001600160a01b0386168481029085828161080b57fe5b04141561083c5781810182811061083a5761083083896001600160a01b0316836106a9565b935050505061055e565b505b6108628261085d878a6001600160a01b0316868161085657fe5b04906108b2565b6106e3565b9250505061055e565b6001600160a01b0386168481029085828161088257fe5b0414801561088f57508082115b61089857600080fd5b808203610830610754846001600160a01b038b16846106a9565b808201828110156108c257600080fd5b92915050565b806001600160a01b03811681146108de57600080fd5b91905056fea2646970667358221220e0e4228fbc0bf882d82f2a7faad8ad0a906fc1e2469fd3b2b1943e465030570564736f6c63430007060033";

type SwapMathEchidnaTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapMathEchidnaTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapMathEchidnaTest__factory extends ContractFactory {
  constructor(...args: SwapMathEchidnaTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SwapMathEchidnaTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SwapMathEchidnaTest__factory {
    return super.connect(runner) as SwapMathEchidnaTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapMathEchidnaTestInterface {
    return new Interface(_abi) as SwapMathEchidnaTestInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SwapMathEchidnaTest {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SwapMathEchidnaTest;
  }
}
