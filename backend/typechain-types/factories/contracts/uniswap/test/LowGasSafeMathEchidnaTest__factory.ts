/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  LowGasSafeMathEchidnaTest,
  LowGasSafeMathEchidnaTestInterface,
} from "../../../../contracts/uniswap/test/LowGasSafeMathEchidnaTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "checkAdd",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "y",
        type: "int256",
      },
    ],
    name: "checkAddi",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "checkMul",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "y",
        type: "uint256",
      },
    ],
    name: "checkSub",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "y",
        type: "int256",
      },
    ],
    name: "checkSubi",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506102c5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80636d886fae116100505780636d886fae146100b45780639239e777146100d7578063bd78b20d146100fa57610067565b80630f9350001461006c5780630fe48c5c14610091575b600080fd5b61008f6004803603604081101561008257600080fd5b508035906020013561011d565b005b61008f600480360360408110156100a757600080fd5b5080359060200135610151565b61008f600480360360408110156100ca57600080fd5b5080359060200135610190565b61008f600480360360408110156100ed57600080fd5b50803590602001356101b3565b61008f6004803603604081101561011057600080fd5b50803590602001356101e6565b60006101298383610219565b9050818301811461013657fe5b8281101580156101465750818110155b61014c57fe5b505050565b600061015d838361022f565b9050818302811461016a57fe5b821580610175575081155b80610146575082811015801561014657508181101561014c57fe5b600061019c8383610253565b905081830381146101a957fe5b8281111561014c57fe5b60006101bf8383610263565b905081830181146101cc57fe5b600082126101dd5782811215610146565b82811261014c57fe5b60006101f28383610279565b905081830381146101ff57fe5b600082126102105782811315610146565b82811361014c57fe5b8082018281101561022957600080fd5b92915050565b600082158061024a5750508181028183828161024757fe5b04145b61022957600080fd5b8082038281111561022957600080fd5b8181018281121560008312151461022957600080fd5b8082038281131560008312151461022957600080fdfea2646970667358221220c1b3dcfdee523666b8af2442b11102e1c2d0587e81644b7544295160af6500f164736f6c63430007060033";

type LowGasSafeMathEchidnaTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LowGasSafeMathEchidnaTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LowGasSafeMathEchidnaTest__factory extends ContractFactory {
  constructor(...args: LowGasSafeMathEchidnaTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LowGasSafeMathEchidnaTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): LowGasSafeMathEchidnaTest__factory {
    return super.connect(runner) as LowGasSafeMathEchidnaTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LowGasSafeMathEchidnaTestInterface {
    return new Interface(_abi) as LowGasSafeMathEchidnaTestInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): LowGasSafeMathEchidnaTest {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as LowGasSafeMathEchidnaTest;
  }
}
